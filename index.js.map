{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = 'YOUR_API_KEY_HERE';\n\nexport async function getImagesByQuery(query) {\n  const response = await axios.get(BASE_URL, {\n    params: {\n      key: API_KEY,\n      q: query,\n      image_type: 'photo',\n      orientation: 'horizontal',\n      safesearch: true,\n    },\n  });\n\n  return response.data;\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst galleryList = document.querySelector('.gallery');\nconst loader = document.querySelector('.loader');\n\nconst lightbox = new SimpleLightbox('.gallery a');\n\nexport function createGallery(images) {\n  const markup = images\n    .map(\n      img => `\n      <li class=\"gallery-item\">\n        <a href=\"${img.largeImageURL}\">\n          <img src=\"${img.webformatURL}\" alt=\"${img.tags}\" />\n        </a>\n        <div class=\"info\">\n          <p>Likes: ${img.likes}</p>\n          <p>Views: ${img.views}</p>\n          <p>Comments: ${img.comments}</p>\n          <p>Downloads: ${img.downloads}</p>\n        </div>\n      </li>`\n    )\n    .join('');\n\n  galleryList.insertAdjacentHTML('beforeend', markup);\n  lightbox.refresh();\n}\n\nexport function clearGallery() {\n  galleryList.innerHTML = '';\n}\n\nexport function showLoader() {\n  loader.classList.remove('is-hidden');\n}\n\nexport function hideLoader() {\n  loader.classList.add('is-hidden');\n}\n","import { getImagesByQuery } from './js/pixabay-api';\nimport {\n  createGallery,\n  clearGallery,\n  showLoader,\n  hideLoader,\n} from './js/render-functions';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst input = form.querySelector('input[name=\"search-text\"]');\n\nform.addEventListener('submit', async e => {\n  e.preventDefault();\n\n  const query = input.value.trim();\n  if (!query) {\n    iziToast.error({ message: 'Please enter a search term!' });\n    return;\n  }\n\n  clearGallery();\n  showLoader();\n\n  try {\n    const data = await getImagesByQuery(query);\n    if (data.hits.length === 0) {\n      iziToast.info({\n        message:\n          'Sorry, there are no images matching your search query. Please try again!',\n      });\n    } else {\n      createGallery(data.hits);\n    }\n  } catch (error) {\n    iziToast.error({ message: 'Error fetching images. Try again later.' });\n  } finally {\n    hideLoader();\n  }\n});\n"],"names":["BASE_URL","API_KEY","getImagesByQuery","query","axios","galleryList","loader","lightbox","SimpleLightbox","createGallery","images","markup","img","clearGallery","showLoader","hideLoader","form","input","e","iziToast","data"],"mappings":"owBAEA,MAAMA,EAAW,2BACXC,EAAU,oBAET,eAAeC,EAAiBC,EAAO,CAW5C,OAViB,MAAMC,EAAM,IAAIJ,EAAU,CACzC,OAAQ,CACN,IAAKC,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACL,CAAG,GAEe,IAClB,CCdA,MAAME,EAAc,SAAS,cAAc,UAAU,EAC/CC,EAAS,SAAS,cAAc,SAAS,EAEzCC,EAAW,IAAIC,EAAe,YAAY,EAEzC,SAASC,EAAcC,EAAQ,CACpC,MAAMC,EAASD,EACZ,IACCE,GAAO;AAAA;AAAA,mBAEMA,EAAI,aAAa;AAAA,sBACdA,EAAI,YAAY,UAAUA,EAAI,IAAI;AAAA;AAAA;AAAA,sBAGlCA,EAAI,KAAK;AAAA,sBACTA,EAAI,KAAK;AAAA,yBACNA,EAAI,QAAQ;AAAA,0BACXA,EAAI,SAAS;AAAA;AAAA,YAGlC,EACA,KAAK,EAAE,EAEVP,EAAY,mBAAmB,YAAaM,CAAM,EAClDJ,EAAS,QAAO,CAClB,CAEO,SAASM,GAAe,CAC7BR,EAAY,UAAY,EAC1B,CAEO,SAASS,GAAa,CAC3BR,EAAO,UAAU,OAAO,WAAW,CACrC,CAEO,SAASS,GAAa,CAC3BT,EAAO,UAAU,IAAI,WAAW,CAClC,CC7BA,MAAMU,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAQD,EAAK,cAAc,2BAA2B,EAE5DA,EAAK,iBAAiB,SAAU,MAAME,GAAK,CACzCA,EAAE,eAAc,EAEhB,MAAMf,EAAQc,EAAM,MAAM,KAAI,EAC9B,GAAI,CAACd,EAAO,CACVgB,EAAS,MAAM,CAAE,QAAS,6BAA+B,CAAA,EACzD,MACD,CAEDN,IACAC,IAEA,GAAI,CACF,MAAMM,EAAO,MAAMlB,EAAiBC,CAAK,EACrCiB,EAAK,KAAK,SAAW,EACvBD,EAAS,KAAK,CACZ,QACE,0EACV,CAAO,EAEDV,EAAcW,EAAK,IAAI,CAE1B,MAAe,CACdD,EAAS,MAAM,CAAE,QAAS,yCAA2C,CAAA,CACzE,QAAY,CACRJ,GACD,CACH,CAAC"}